package com.board.util;

/*
 * EmptyChecker 클래스는 객체들이 "비어있는지" 여부를 판별하는 유틸리티 메서드를 제공합니다.
 * 이 클래스는 객체의 '빈(empty)' 상태를 확인하는 유틸리티 함수들을 제공합니다.
 * 
 * 해당 클래스는 주어진 객체나 객체의 배열(목록)이 "비어있는지"를 판별하는 유틸리티 기능을 제공합니다. 
 * 객체가 비어있다는 것은 그 객체가 null이거나, 숫자로서 0의 값을 가지거나, 문자열로서 내용이 없는 경우를 의미합니다.
 * 
 * 숫자와 문자열 데이터 타입에 대해 특별한 처리를 제공하며, 기타 다른 타입의 객체는 null 여부만을 체크합니다. 
 * 이 클래스의 가장 큰 장점은 다양한 객체 타입에 대해 "비어있음"의 정의를 일관되게 적용하는 데 있습니다.
 * 이 클래스는 주로 데이터의 유효성 검사나 전처리 단계에서 유용하게 사용
 */
public class EmptyChecker {

	/* 단일 객체의 '빈(empty)' 상태를 확인하는 메서드입니다.
	 * 주어진 객체가 "비어 있음" 상태인지 검사하는 메서드
     * 
     * 주어진 객체(obj)가 비어있는지 여부를 확인합니다.
     * 
     * 파라미터 : (Object obj) 검사할 객체
     * return : 객체가 비어있다면 true, 그렇지 않다면 false
     */
	public static boolean isEmpty(Object obj) {
		// null 먼저 제거
		// 매개변수로 전달된 객체가 null인 경우 비어있는 것으로 간주하고 true(즉, '빈' 상태)를 반환합니다.
		if (obj == null) {
			return true;
		}

		// 매개변수로 전달된 객체가 숫자(Number)타입일 경우 확인합니다. (null과 0을 체크)
		if (obj instanceof Number) {
			// 객체를 Number 타입으로 형변환합니다.
			Number n = (Number) obj;
			// 숫자의 값이 0인지 확인합니다. 숫자의 값이 0인 경우 비어있는('빈' 상태로) 것으로 간주하고 true 반환
			return n.doubleValue() == 0d;
		}
		// 매개변수로 전달된 객체가 문자열(String)타입일 경우 확인합니다. (null과 empty String을 체크)
		else if (obj instanceof String) {
			// 객체를 String 타입으로 형변환합니다.
			String s = (String) obj;
			// 문자열 값이 비어있는지 확인합니다. 비어있으면 '빈' 상태로 간주하고 (즉, 길이가 0인 경우) true 반환
			return s.isEmpty();
		}

		// 앞의 조건들에 해당되지 않는 경우
		// 위의 조건에 해당되지 않는 다른 타입의 객체는 비어있지 않다고 간주하고 false(즉, '비어있지 않은' 상태) 반환
		return false;
	}
	
	
	/* 가변 인수(varargs)를 사용하여 여러 객체가 모두 "비어 있음" 상태인지 검사하는 메서드 
	 * 여러 객체의 '빈(empty)' 상태를 확인하는 메서드입니다. (가변 인수를 사용)
	 * 가변 인수를 매개변수로 받아, 모든 객체가 '비어있는지' 확인하는 메서드입니다.
     * ---------------------------------------------------------------
     * 가변 인자(varargs)로 주어진 객체들 중 어느 하나라도 비어있지 않다면 false를 반환하고,
     * 모든 객체들이 비어있다면 true를 반환합니다.
     * ---------------------------------------------------------------
     * 즉, 주어진 여러 객체(args) 중 하나라도 비어있지 않은지 확인합니다.
     * ---------------------------------------------------------------
     * 파라미터 : (args) 검사할(확인하고자 하는) 객체들의 목록
     * return : 모든 객체들이 비어있다면 true, 그렇지 않다면 false
     */
	public static boolean isEmpty(Object... args) {
		// 매개변수로 전달된 객체 배열(목록)이 null 이거나 요소가 없는 경우(길이가 0인 경우) 비어있는 것으로 간주하고 true(즉, '빈' 상태) 반환
		if (args == null || args.length == 0)
			return true;

		// 주어진 객체 목록에 포함된 각 객체를 순회하면서 비어있는지 검사합니다.
		// 각각의 객체에 대하여 '빈(empty)' 상태를 확인합니다.
		// 매개변수로 전달된 모든 객체를 순회합니다.
		// 각 객체에 대해 isEmpty 메서드를 사용하여 검사
		for (Object obj : args) {
			// 객체 목록 중 어느 하나라도 비어있지 않은 객체가 있으면 false 반환
			// 어느 하나라도 '빈' 상태가 아닌 객체가 있다면 false(즉, '비어있지 않은' 상태)를 반환합니다.
			if (!isEmpty(obj)) {
				return false;
			}
		}
		
		// 모든 객체들이 비어있는 경우('빈' 상태인 경우) true 반환
		return true;
	}
}